{"uid":"db21ea5c6b0bf9e8","name":"test_upload_pet_image_empty_file","fullName":"tests.pet.test_pet_upload_image#test_upload_pet_image_empty_file","historyId":"76f0d41533589eb7d99e36675af41206","time":{"start":1739170617181,"stop":1739170617796,"duration":615},"description":"Uploading only metadata without an image, expecting 500 Internal Server Error","descriptionHtml":"<p>Uploading only metadata without an image, expecting 500 Internal Server Error</p>\n","status":"failed","statusMessage":"AssertionError: assert 400 == 500\n +  where 400 = <Response [400]>.status_code","statusTrace":"pet_api = <pages.pet_api.PetAPI object at 0x000002B6B2D66260>\n\n    def test_upload_pet_image_empty_file(pet_api):\n        \"\"\"Uploading only metadata without an image, expecting 500 Internal Server Error\"\"\"\n        response = requests.post(\n            API_URL.format(1),\n            files={},\n            data={\"additionalMetadata\": \"fatma\"},\n            headers={\"accept\": \"application/json\", \"Content-Type\": \"multipart/form-data\"}\n        )\n    \n>       assert response.status_code == 500  # Internal Server Error expected\nE       assert 400 == 500\nE        +  where 400 = <Response [400]>.status_code\n\npet\\test_pet_upload_image.py:73: AssertionError","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":4,"retriesStatusChange":false,"beforeStages":[{"name":"pet_api","time":{"start":1739170617181,"stop":1739170617181,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"hasContent":false,"attachmentStep":false,"shouldDisplayMessage":false,"attachmentsCount":0}],"afterStages":[],"labels":[{"name":"parentSuite","value":"tests.pet"},{"name":"suite","value":"test_pet_upload_image"},{"name":"host","value":"FatmaZenginoglu"},{"name":"thread","value":"33628-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"tests.pet.test_pet_upload_image"},{"name":"resultFormat","value":"allure2"}],"parameters":[],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[{"uid":"9cc2afae9ddb1f0e","status":"failed","statusDetails":"AssertionError: assert 400 == 500\n +  where 400 = <Response [400]>.status_code","time":{"start":1739170559202,"stop":1739170559803,"duration":601}},{"uid":"de1bb6f64368e427","status":"failed","statusDetails":"AssertionError: assert 400 == 500\n +  where 400 = <Response [400]>.status_code","time":{"start":1739170515529,"stop":1739170516139,"duration":610}},{"uid":"d01744b2924d6937","status":"failed","statusDetails":"AssertionError: assert 400 == 500\n +  where 400 = <Response [400]>.status_code","time":{"start":1739170337079,"stop":1739170337639,"duration":560}},{"uid":"20427b5e6376012","status":"failed","statusDetails":"AssertionError: assert 400 == 500\n +  where 400 = <Response [400]>.status_code","time":{"start":1739166664263,"stop":1739166664840,"duration":577}}],"categories":[{"name":"Product defects","matchedStatuses":[],"flaky":false}],"tags":[]},"source":"db21ea5c6b0bf9e8.json","parameterValues":[]}